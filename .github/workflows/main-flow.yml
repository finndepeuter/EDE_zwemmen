name: Build and deliver containers

on: push

jobs:
  eventservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver event-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test and package project
        working-directory: ./event-service
        run: mvn package -DskipTests

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/event-service:latest ./event-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/event-service:latest
  swimmerservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver swimmer-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test and package project
        working-directory: ./swimmer-service
        run: mvn package -DskipTests

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/swimmer-service:latest ./swimmer-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/swimmer-service:latest
  raceservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver race-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test and package project
        working-directory: ./race-service
        run: mvn package -DskipTests

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/race-service:latest ./race-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/race-service:latest

  apigateway:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver apigateway container
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test and package project
        working-directory: ./api-gateway
        run: mvn package -DskipTests

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: |
          docker build \
            --build-arg GOOGLE_CLIENTID=${{ secrets.GOOGLE_CLIENTID }} \
            --build-arg GOOGLE_CLIENTSECRET=${{ secrets.GOOGLE_CLIENTSECRET }} \
            -t ${{ secrets.DOCKER_USER }}/api-gateway-ede:latest \
            ./api-gateway

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/api-gateway-ede:latest
